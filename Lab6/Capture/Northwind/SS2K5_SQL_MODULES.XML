<?xml version="1.0" encoding="UTF-8" ?><START><er><ec>create view &quot;Customer and Suppliers by City&quot; AS
SELECT City, CompanyName, ContactName, &apos;Customers&apos; AS Relationship 
FROM Customers
UNION SELECT City, CompanyName, ContactName, &apos;Suppliers&apos;
FROM Suppliers
--ORDER BY City, CompanyName
</ec><ec>485576768</ec></er><er><ec>create view &quot;Alphabetical list of products&quot; AS
SELECT Products.*, Categories.CategoryName
FROM Categories INNER JOIN Products ON Categories.CategoryID = Products.CategoryID
WHERE (((Products.Discontinued)=0))
</ec><ec>501576825</ec></er><er><ec>create view &quot;Current Product List&quot; AS
SELECT Product_List.ProductID, Product_List.ProductName
FROM Products AS Product_List
WHERE (((Product_List.Discontinued)=0))
--ORDER BY Product_List.ProductName
</ec><ec>517576882</ec></er><er><ec>create view &quot;Orders Qry&quot; AS
SELECT Orders.OrderID, Orders.CustomerID, Orders.EmployeeID, Orders.OrderDate, Orders.RequiredDate, 
	Orders.ShippedDate, Orders.ShipVia, Orders.Freight, Orders.ShipName, Orders.ShipAddress, Orders.ShipCity, 
	Orders.ShipRegion, Orders.ShipPostalCode, Orders.ShipCountry, 
	Customers.CompanyName, Customers.Address, Customers.City, Customers.Region, Customers.PostalCode, Customers.Country
FROM Customers INNER JOIN Orders ON Customers.CustomerID = Orders.CustomerID
</ec><ec>533576939</ec></er><er><ec>create view &quot;Products Above Average Price&quot; AS
SELECT Products.ProductName, Products.UnitPrice
FROM Products
WHERE Products.UnitPrice&gt;(SELECT AVG(UnitPrice) From Products)
--ORDER BY Products.UnitPrice DESC
</ec><ec>549576996</ec></er><er><ec>create view &quot;Products by Category&quot; AS
SELECT Categories.CategoryName, Products.ProductName, Products.QuantityPerUnit, Products.UnitsInStock, Products.Discontinued
FROM Categories INNER JOIN Products ON Categories.CategoryID = Products.CategoryID
WHERE Products.Discontinued &lt;&gt; 1
--ORDER BY Categories.CategoryName, Products.ProductName
</ec><ec>565577053</ec></er><er><ec>create view &quot;Quarterly Orders&quot; AS
SELECT DISTINCT Customers.CustomerID, Customers.CompanyName, Customers.City, Customers.Country
FROM Customers RIGHT JOIN Orders ON Customers.CustomerID = Orders.CustomerID
WHERE Orders.OrderDate BETWEEN &apos;19970101&apos; And &apos;19971231&apos;
</ec><ec>581577110</ec></er><er><ec>create view Invoices AS
SELECT Orders.ShipName, Orders.ShipAddress, Orders.ShipCity, Orders.ShipRegion, Orders.ShipPostalCode, 
	Orders.ShipCountry, Orders.CustomerID, Customers.CompanyName AS CustomerName, Customers.Address, Customers.City, 
	Customers.Region, Customers.PostalCode, Customers.Country, 
	(FirstName + &apos; &apos; + LastName) AS Salesperson, 
	Orders.OrderID, Orders.OrderDate, Orders.RequiredDate, Orders.ShippedDate, Shippers.CompanyName As ShipperName, 
	&quot;Order Details&quot;.ProductID, Products.ProductName, &quot;Order Details&quot;.UnitPrice, &quot;Order Details&quot;.Quantity, 
	&quot;Order Details&quot;.Discount, 
	(CONVERT(money,(&quot;Order Details&quot;.UnitPrice*Quantity*(1-Discount)/100))*100) AS ExtendedPrice, Orders.Freight
FROM 	Shippers INNER JOIN 
		(Products INNER JOIN 
			(
				(Employees INNER JOIN 
					(Customers INNER JOIN Orders ON Customers.CustomerID = Orders.CustomerID) 
				ON Employees.EmployeeID = Orders.EmployeeID) 
			INNER JOIN &quot;Order Details&quot; ON Orders.OrderID = &quot;Order Details&quot;.OrderID) 
		ON Products.ProductID = &quot;Order Details&quot;.ProductID) 
	ON Shippers.ShipperID = Orders.ShipVia
</ec><ec>597577167</ec></er><er><ec>create view &quot;Order Details Extended&quot; AS
SELECT &quot;Order Details&quot;.OrderID, &quot;Order Details&quot;.ProductID, Products.ProductName, 
	&quot;Order Details&quot;.UnitPrice, &quot;Order Details&quot;.Quantity, &quot;Order Details&quot;.Discount, 
	(CONVERT(money,(&quot;Order Details&quot;.UnitPrice*Quantity*(1-Discount)/100))*100) AS ExtendedPrice
FROM Products INNER JOIN &quot;Order Details&quot; ON Products.ProductID = &quot;Order Details&quot;.ProductID
--ORDER BY &quot;Order Details&quot;.OrderID
</ec><ec>613577224</ec></er><er><ec>create view &quot;Order Subtotals&quot; AS
SELECT &quot;Order Details&quot;.OrderID, Sum(CONVERT(money,(&quot;Order Details&quot;.UnitPrice*Quantity*(1-Discount)/100))*100) AS Subtotal
FROM &quot;Order Details&quot;
GROUP BY &quot;Order Details&quot;.OrderID
</ec><ec>629577281</ec></er><er><ec>create view &quot;Product Sales for 1997&quot; AS
SELECT Categories.CategoryName, Products.ProductName, 
Sum(CONVERT(money,(&quot;Order Details&quot;.UnitPrice*Quantity*(1-Discount)/100))*100) AS ProductSales
FROM (Categories INNER JOIN Products ON Categories.CategoryID = Products.CategoryID) 
	INNER JOIN (Orders 
		INNER JOIN &quot;Order Details&quot; ON Orders.OrderID = &quot;Order Details&quot;.OrderID) 
	ON Products.ProductID = &quot;Order Details&quot;.ProductID
WHERE (((Orders.ShippedDate) Between &apos;19970101&apos; And &apos;19971231&apos;))
GROUP BY Categories.CategoryName, Products.ProductName
</ec><ec>645577338</ec></er><er><ec>create view &quot;Category Sales for 1997&quot; AS
SELECT &quot;Product Sales for 1997&quot;.CategoryName, Sum(&quot;Product Sales for 1997&quot;.ProductSales) AS CategorySales
FROM &quot;Product Sales for 1997&quot;
GROUP BY &quot;Product Sales for 1997&quot;.CategoryName
</ec><ec>661577395</ec></er><er><ec>create view &quot;Sales by Category&quot; AS
SELECT Categories.CategoryID, Categories.CategoryName, Products.ProductName, 
	Sum(&quot;Order Details Extended&quot;.ExtendedPrice) AS ProductSales
FROM 	Categories INNER JOIN 
		(Products INNER JOIN 
			(Orders INNER JOIN &quot;Order Details Extended&quot; ON Orders.OrderID = &quot;Order Details Extended&quot;.OrderID) 
		ON Products.ProductID = &quot;Order Details Extended&quot;.ProductID) 
	ON Categories.CategoryID = Products.CategoryID
WHERE Orders.OrderDate BETWEEN &apos;19970101&apos; And &apos;19971231&apos;
GROUP BY Categories.CategoryID, Categories.CategoryName, Products.ProductName
--ORDER BY Products.ProductName
</ec><ec>677577452</ec></er><er><ec>create view &quot;Sales Totals by Amount&quot; AS
SELECT &quot;Order Subtotals&quot;.Subtotal AS SaleAmount, Orders.OrderID, Customers.CompanyName, Orders.ShippedDate
FROM 	Customers INNER JOIN 
		(Orders INNER JOIN &quot;Order Subtotals&quot; ON Orders.OrderID = &quot;Order Subtotals&quot;.OrderID) 
	ON Customers.CustomerID = Orders.CustomerID
WHERE (&quot;Order Subtotals&quot;.Subtotal &gt;2500) AND (Orders.ShippedDate BETWEEN &apos;19970101&apos; And &apos;19971231&apos;)
</ec><ec>693577509</ec></er><er><ec>create view &quot;Summary of Sales by Quarter&quot; AS
SELECT Orders.ShippedDate, Orders.OrderID, &quot;Order Subtotals&quot;.Subtotal
FROM Orders INNER JOIN &quot;Order Subtotals&quot; ON Orders.OrderID = &quot;Order Subtotals&quot;.OrderID
WHERE Orders.ShippedDate IS NOT NULL
--ORDER BY Orders.ShippedDate
</ec><ec>709577566</ec></er><er><ec>create view &quot;Summary of Sales by Year&quot; AS
SELECT Orders.ShippedDate, Orders.OrderID, &quot;Order Subtotals&quot;.Subtotal
FROM Orders INNER JOIN &quot;Order Subtotals&quot; ON Orders.OrderID = &quot;Order Subtotals&quot;.OrderID
WHERE Orders.ShippedDate IS NOT NULL
--ORDER BY Orders.ShippedDate
</ec><ec>725577623</ec></er><er><ec>create procedure &quot;Ten Most Expensive Products&quot; AS
SET ROWCOUNT 10
SELECT Products.ProductName AS TenMostExpensiveProducts, Products.UnitPrice
FROM Products
ORDER BY Products.UnitPrice DESC
</ec><ec>741577680</ec></er><er><ec>create procedure &quot;Employee Sales by Country&quot; 
@Beginning_Date DateTime, @Ending_Date DateTime AS
SELECT Employees.Country, Employees.LastName, Employees.FirstName, Orders.ShippedDate, Orders.OrderID, &quot;Order Subtotals&quot;.Subtotal AS SaleAmount
FROM Employees INNER JOIN 
	(Orders INNER JOIN &quot;Order Subtotals&quot; ON Orders.OrderID = &quot;Order Subtotals&quot;.OrderID) 
	ON Employees.EmployeeID = Orders.EmployeeID
WHERE Orders.ShippedDate Between @Beginning_Date And @Ending_Date
</ec><ec>757577737</ec></er><er><ec>create procedure &quot;Sales by Year&quot; 
	@Beginning_Date DateTime, @Ending_Date DateTime AS
SELECT Orders.ShippedDate, Orders.OrderID, &quot;Order Subtotals&quot;.Subtotal, DATENAME(yy,ShippedDate) AS Year
FROM Orders INNER JOIN &quot;Order Subtotals&quot; ON Orders.OrderID = &quot;Order Subtotals&quot;.OrderID
WHERE Orders.ShippedDate Between @Beginning_Date And @Ending_Date
</ec><ec>773577794</ec></er><er><ec>CREATE PROCEDURE CustOrdersDetail @OrderID int
AS
SELECT ProductName,
    UnitPrice=ROUND(Od.UnitPrice, 2),
    Quantity,
    Discount=CONVERT(int, Discount * 100), 
    ExtendedPrice=ROUND(CONVERT(money, Quantity * (1 - Discount) * Od.UnitPrice), 2)
FROM Products P, [Order Details] Od
WHERE Od.ProductID = P.ProductID and Od.OrderID = @OrderID
</ec><ec>789577851</ec></er><er><ec>CREATE PROCEDURE CustOrdersOrders @CustomerID nchar(5)
AS
SELECT OrderID, 
	OrderDate,
	RequiredDate,
	ShippedDate
FROM Orders
WHERE CustomerID = @CustomerID
ORDER BY OrderID
</ec><ec>805577908</ec></er><er><ec>CREATE PROCEDURE CustOrderHist @CustomerID nchar(5)
AS
SELECT ProductName, Total=SUM(Quantity)
FROM Products P, [Order Details] OD, Orders O, Customers C
WHERE C.CustomerID = @CustomerID
AND C.CustomerID = O.CustomerID AND O.OrderID = OD.OrderID AND OD.ProductID = P.ProductID
GROUP BY ProductName
</ec><ec>821577965</ec></er><er><ec>CREATE PROCEDURE SalesByCategory
    @CategoryName nvarchar(15), @OrdYear nvarchar(4) = &apos;1998&apos;
AS
IF @OrdYear != &apos;1996&apos; AND @OrdYear != &apos;1997&apos; AND @OrdYear != &apos;1998&apos; 
BEGIN
	SELECT @OrdYear = &apos;1998&apos;
END
SELECT ProductName,
	TotalPurchase=ROUND(SUM(CONVERT(decimal(14,2), OD.Quantity * (1-OD.Discount) * OD.UnitPrice)), 0)
FROM [Order Details] OD, Orders O, Products P, Categories C
WHERE OD.OrderID = O.OrderID 
	AND OD.ProductID = P.ProductID 
	AND P.CategoryID = C.CategoryID
	AND C.CategoryName = @CategoryName
	AND SUBSTRING(CONVERT(nvarchar(22), O.OrderDate, 111), 1, 4) = @OrdYear
GROUP BY ProductName
ORDER BY ProductName
</ec><ec>837578022</ec></er><er></er></START>