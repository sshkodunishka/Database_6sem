//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан по шаблону.
//
//     Изменения, вносимые в этот файл вручную, могут привести к непредвиденной работе приложения.
//     Изменения, вносимые в этот файл вручную, будут перезаписаны при повторном создании кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace lab2_v2.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class TravelAgencyEntities : DbContext
    {
        public TravelAgencyEntities()
            : base("name=TravelAgencyEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Countries> Countries { get; set; }
        public virtual DbSet<Orders> Orders { get; set; }
        public virtual DbSet<Touroperators> Touroperators { get; set; }
        public virtual DbSet<Tours> Tours { get; set; }
        public virtual DbSet<Vouchers> Vouchers { get; set; }
    
        public virtual int addCountries(string country, Nullable<bool> visa)
        {
            var countryParameter = country != null ?
                new ObjectParameter("country", country) :
                new ObjectParameter("country", typeof(string));
    
            var visaParameter = visa.HasValue ?
                new ObjectParameter("visa", visa) :
                new ObjectParameter("visa", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("addCountries", countryParameter, visaParameter);
        }
    
        public virtual int addOperator(string name, string phoneNumber)
        {
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            var phoneNumberParameter = phoneNumber != null ?
                new ObjectParameter("phoneNumber", phoneNumber) :
                new ObjectParameter("phoneNumber", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("addOperator", nameParameter, phoneNumberParameter);
        }
    
        public virtual int AddOrders(Nullable<int> idVoucher, string customer, Nullable<bool> pay)
        {
            var idVoucherParameter = idVoucher.HasValue ?
                new ObjectParameter("idVoucher", idVoucher) :
                new ObjectParameter("idVoucher", typeof(int));
    
            var customerParameter = customer != null ?
                new ObjectParameter("customer", customer) :
                new ObjectParameter("customer", typeof(string));
    
            var payParameter = pay.HasValue ?
                new ObjectParameter("pay", pay) :
                new ObjectParameter("pay", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AddOrders", idVoucherParameter, customerParameter, payParameter);
        }
    
        public virtual int AddTour(Nullable<int> idCountry, Nullable<int> idOperator, string tourName, string descr)
        {
            var idCountryParameter = idCountry.HasValue ?
                new ObjectParameter("idCountry", idCountry) :
                new ObjectParameter("idCountry", typeof(int));
    
            var idOperatorParameter = idOperator.HasValue ?
                new ObjectParameter("idOperator", idOperator) :
                new ObjectParameter("idOperator", typeof(int));
    
            var tourNameParameter = tourName != null ?
                new ObjectParameter("tourName", tourName) :
                new ObjectParameter("tourName", typeof(string));
    
            var descrParameter = descr != null ?
                new ObjectParameter("descr", descr) :
                new ObjectParameter("descr", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AddTour", idCountryParameter, idOperatorParameter, tourNameParameter, descrParameter);
        }
    
        public virtual int AddVoucher(Nullable<int> idTour, string voucherName, string descr, Nullable<decimal> price, Nullable<int> numberOfPeople, Nullable<bool> nutrition, Nullable<bool> accommodation, Nullable<bool> hot, Nullable<int> discount)
        {
            var idTourParameter = idTour.HasValue ?
                new ObjectParameter("idTour", idTour) :
                new ObjectParameter("idTour", typeof(int));
    
            var voucherNameParameter = voucherName != null ?
                new ObjectParameter("voucherName", voucherName) :
                new ObjectParameter("voucherName", typeof(string));
    
            var descrParameter = descr != null ?
                new ObjectParameter("descr", descr) :
                new ObjectParameter("descr", typeof(string));
    
            var priceParameter = price.HasValue ?
                new ObjectParameter("price", price) :
                new ObjectParameter("price", typeof(decimal));
    
            var numberOfPeopleParameter = numberOfPeople.HasValue ?
                new ObjectParameter("numberOfPeople", numberOfPeople) :
                new ObjectParameter("numberOfPeople", typeof(int));
    
            var nutritionParameter = nutrition.HasValue ?
                new ObjectParameter("nutrition", nutrition) :
                new ObjectParameter("nutrition", typeof(bool));
    
            var accommodationParameter = accommodation.HasValue ?
                new ObjectParameter("accommodation", accommodation) :
                new ObjectParameter("accommodation", typeof(bool));
    
            var hotParameter = hot.HasValue ?
                new ObjectParameter("hot", hot) :
                new ObjectParameter("hot", typeof(bool));
    
            var discountParameter = discount.HasValue ?
                new ObjectParameter("discount", discount) :
                new ObjectParameter("discount", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AddVoucher", idTourParameter, voucherNameParameter, descrParameter, priceParameter, numberOfPeopleParameter, nutritionParameter, accommodationParameter, hotParameter, discountParameter);
        }
    
        public virtual int DeleteCountry(string country)
        {
            var countryParameter = country != null ?
                new ObjectParameter("country", country) :
                new ObjectParameter("country", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteCountry", countryParameter);
        }
    
        public virtual int DeleteOperator(string name)
        {
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteOperator", nameParameter);
        }
    
        public virtual int DeleteOrder(string customer)
        {
            var customerParameter = customer != null ?
                new ObjectParameter("customer", customer) :
                new ObjectParameter("customer", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteOrder", customerParameter);
        }
    
        public virtual int DeleteTour(string tourName)
        {
            var tourNameParameter = tourName != null ?
                new ObjectParameter("tourName", tourName) :
                new ObjectParameter("tourName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteTour", tourNameParameter);
        }
    
        public virtual int DeleteVoucher(string voucherName)
        {
            var voucherNameParameter = voucherName != null ?
                new ObjectParameter("voucherName", voucherName) :
                new ObjectParameter("voucherName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteVoucher", voucherNameParameter);
        }
    
        public virtual ObjectResult<getCountries_Result> getCountries()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getCountries_Result>("getCountries");
        }
    
        public virtual ObjectResult<getCountriesByName_Result> getCountriesByName(string country)
        {
            var countryParameter = country != null ?
                new ObjectParameter("country", country) :
                new ObjectParameter("country", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getCountriesByName_Result>("getCountriesByName", countryParameter);
        }
    
        public virtual ObjectResult<GetOperatorByName_Result> GetOperatorByName(string name)
        {
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetOperatorByName_Result>("GetOperatorByName", nameParameter);
        }
    
        public virtual ObjectResult<GetOperators_Result> GetOperators()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetOperators_Result>("GetOperators");
        }
    
        public virtual ObjectResult<GetOrderByCustomer_Result> GetOrderByCustomer(string customer)
        {
            var customerParameter = customer != null ?
                new ObjectParameter("customer", customer) :
                new ObjectParameter("customer", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetOrderByCustomer_Result>("GetOrderByCustomer", customerParameter);
        }
    
        public virtual ObjectResult<GetOrders_Result> GetOrders()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetOrders_Result>("GetOrders");
        }
    
        public virtual ObjectResult<GetTourByName_Result> GetTourByName(string tourName)
        {
            var tourNameParameter = tourName != null ?
                new ObjectParameter("tourName", tourName) :
                new ObjectParameter("tourName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetTourByName_Result>("GetTourByName", tourNameParameter);
        }
    
        public virtual ObjectResult<GetTours_Result> GetTours()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetTours_Result>("GetTours");
        }
    
        public virtual ObjectResult<GetVoucherByName_Result> GetVoucherByName(string voucherName)
        {
            var voucherNameParameter = voucherName != null ?
                new ObjectParameter("voucherName", voucherName) :
                new ObjectParameter("voucherName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetVoucherByName_Result>("GetVoucherByName", voucherNameParameter);
        }
    
        public virtual ObjectResult<GetVouchers_Result> GetVouchers()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetVouchers_Result>("GetVouchers");
        }
    
        public virtual int UpdateCountries(string country, Nullable<bool> visa)
        {
            var countryParameter = country != null ?
                new ObjectParameter("country", country) :
                new ObjectParameter("country", typeof(string));
    
            var visaParameter = visa.HasValue ?
                new ObjectParameter("visa", visa) :
                new ObjectParameter("visa", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateCountries", countryParameter, visaParameter);
        }
    
        public virtual int UpdateOperator(string name, string phoneNumber)
        {
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            var phoneNumberParameter = phoneNumber != null ?
                new ObjectParameter("phoneNumber", phoneNumber) :
                new ObjectParameter("phoneNumber", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateOperator", nameParameter, phoneNumberParameter);
        }
    
        public virtual int UpdateOrder(Nullable<int> idVoucher, string customer, Nullable<bool> pay)
        {
            var idVoucherParameter = idVoucher.HasValue ?
                new ObjectParameter("idVoucher", idVoucher) :
                new ObjectParameter("idVoucher", typeof(int));
    
            var customerParameter = customer != null ?
                new ObjectParameter("customer", customer) :
                new ObjectParameter("customer", typeof(string));
    
            var payParameter = pay.HasValue ?
                new ObjectParameter("pay", pay) :
                new ObjectParameter("pay", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateOrder", idVoucherParameter, customerParameter, payParameter);
        }
    
        public virtual int UpdateTour(Nullable<int> idCountry, Nullable<int> idOperator, string tourName, string descr)
        {
            var idCountryParameter = idCountry.HasValue ?
                new ObjectParameter("idCountry", idCountry) :
                new ObjectParameter("idCountry", typeof(int));
    
            var idOperatorParameter = idOperator.HasValue ?
                new ObjectParameter("idOperator", idOperator) :
                new ObjectParameter("idOperator", typeof(int));
    
            var tourNameParameter = tourName != null ?
                new ObjectParameter("tourName", tourName) :
                new ObjectParameter("tourName", typeof(string));
    
            var descrParameter = descr != null ?
                new ObjectParameter("descr", descr) :
                new ObjectParameter("descr", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateTour", idCountryParameter, idOperatorParameter, tourNameParameter, descrParameter);
        }
    
        public virtual int UpdateVoucher(Nullable<int> idTour, string voucherName, string descr, Nullable<decimal> fullPrice, Nullable<decimal> price, Nullable<int> numberOfPeople, Nullable<bool> nutrition, Nullable<bool> accommodation, Nullable<bool> hot, Nullable<int> discount)
        {
            var idTourParameter = idTour.HasValue ?
                new ObjectParameter("idTour", idTour) :
                new ObjectParameter("idTour", typeof(int));
    
            var voucherNameParameter = voucherName != null ?
                new ObjectParameter("voucherName", voucherName) :
                new ObjectParameter("voucherName", typeof(string));
    
            var descrParameter = descr != null ?
                new ObjectParameter("descr", descr) :
                new ObjectParameter("descr", typeof(string));
    
            var fullPriceParameter = fullPrice.HasValue ?
                new ObjectParameter("fullPrice", fullPrice) :
                new ObjectParameter("fullPrice", typeof(decimal));
    
            var priceParameter = price.HasValue ?
                new ObjectParameter("price", price) :
                new ObjectParameter("price", typeof(decimal));
    
            var numberOfPeopleParameter = numberOfPeople.HasValue ?
                new ObjectParameter("numberOfPeople", numberOfPeople) :
                new ObjectParameter("numberOfPeople", typeof(int));
    
            var nutritionParameter = nutrition.HasValue ?
                new ObjectParameter("nutrition", nutrition) :
                new ObjectParameter("nutrition", typeof(bool));
    
            var accommodationParameter = accommodation.HasValue ?
                new ObjectParameter("accommodation", accommodation) :
                new ObjectParameter("accommodation", typeof(bool));
    
            var hotParameter = hot.HasValue ?
                new ObjectParameter("hot", hot) :
                new ObjectParameter("hot", typeof(bool));
    
            var discountParameter = discount.HasValue ?
                new ObjectParameter("discount", discount) :
                new ObjectParameter("discount", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateVoucher", idTourParameter, voucherNameParameter, descrParameter, fullPriceParameter, priceParameter, numberOfPeopleParameter, nutritionParameter, accommodationParameter, hotParameter, discountParameter);
        }
    }
}
